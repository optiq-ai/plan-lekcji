version: '3.8'

# Konfiguracja Portainer dla aplikacji Inteligentny Plan Lekcji
# Zalecane ustawienia dla środowiska produkcyjnego

# Ustawienia stosu (stack)
name: intelligent-lesson-planning

# Ustawienia sieci
networks:
  - external: false
    name: app-network
    driver: overlay
    attachable: true
    driver_opts:
      encrypted: "true"

# Ustawienia usług
services:
  frontend:
    image: ${REGISTRY:-localhost}/intelligent-lesson-planning-frontend:${TAG:-latest}
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8080/api}
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    image: ${REGISTRY:-localhost}/intelligent-lesson-planning-backend:${TAG:-latest}
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL:-jdbc:postgresql://db:5432/lesson_planning_db}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD:-postgres}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO:-update}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: postgres:14-alpine
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-lesson_planning_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

# Ustawienia wolumenów
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: /path/to/data
      o: bind
